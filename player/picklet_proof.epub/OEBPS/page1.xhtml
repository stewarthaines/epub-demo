<?xml version="1.0" encoding="UTF-8"?>
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>This is a Picklet</title>
    <!-- <link rel="stylesheet" type="text/css" href="style.css" /> -->
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <!-- <meta name="viewport" content="initial-scale=1.0" /> -->
    <!-- <meta name="viewport" content="width=320, height=480, user-scalable=no, initial-scale=1.0, maximum-scale=1.0" /> -->
    <!-- <meta name="viewport" content="width=320, height=492" /> -->
    <meta name="viewport" content="width=320, height=508" />
    <style>
      @media screen and (min-width: 320px) {
        #svg_document {
          /* height: 480px; */
        }
      }
      html,
      body {
        touch-action: none;
        width: 100%;
        height: 100%;
        /* width: 320px;
        height: 480px; */
        padding: 0;
        margin: 0;
        -webkit-overflow-scrolling: none;
        /* overflow: hidden; */
      }
      #svg_document {
        background-color: orange; /* #90ee90; */
        /* height: 100%; */
      }
      @media (min-aspect-ratio: 744/640) {
        body {
          background-color: aquamarine;
          /* height: 100%; */
        }
      }
      /* @media (pointer: coarse) {
        /* Styles for touch input */
      /* body {
          background-color: blue;
        } */
      /* } */
      .controls {
        /* height: 48px; */
        position: fixed;
        width: 100%;
        bottom: -6px;
        /* bottom: 20px; */
        /* bottom: -48px; */
      }
      .controls svg {
        position: absolute;
        /* bottom: 0; */
      }
      input[type="range"] {
        margin: 0;
        opacity: 0;
        -webkit-appearance: none; /* for MacOS Books 1.5 */
        appearance: none;
        pointer-events: none;
        /* direction: rtl; */
        width: 100%;
        height: 20vw;
        /* background: rgba(255, 255, 255, 0.6); */
        /* border-radius: 5px; */
        /* opacity: 0.5; */
      }
      input[type="range"]::-webkit-slider-runnable-track {
        -webkit-appearance: initial;
        pointer-events: none;
        /* opacity: 0.5; */
        /* touch-action: initial; */
        /* touch-action: manipulation; */
      }
      input[type="range"]::-webkit-slider-thumb {
        /* pointer-events: auto; */
        border: none;
        pointer-events: fill;
        /* touch-action: none; */
        -webkit-appearance: none; /* for MacOS Books 1.5 */
        /* appearance: none; */
        width: 30vw;
        height: 20vw;
        border-radius: 0;
        /* cursor: pointer; */
        background-color: red;
      }
      #output {
        position: absolute;
        top: 0;
        left: 0;
      }
    </style>
    <!-- <script type="text/javascript" src="main.js"> -->
    <script type="text/javascript">
      <![CDATA[
      var slider;
      var svg;
      var slider_svg;
      var body;
      var output;
      var animate1;
      var animate2;
      var dragging = false;
      window.addEventListener("DOMContentLoaded", reset, false);
      function ignore(evt) {
        return false;
      }
      function setBegin(value) {
        console.log("setBegin(" + value + ")");
        ["animate", "animateTransform"].forEach(function(tag) {
          console.log(tag);
          var c = document.getElementsByTagName(tag);
          var i;
            for (i = 0; i < c.length; i++) {
              var el = c[i];
              el.setAttribute("begin", value);
              // el.setAttribute("repeatCount", value == "indefinite" ? "1" : "indefinte");
              console.log("setting begin on " + el);
            }
        })
        var s = document.getElementsByTagName("svg");
        for (var i = 0; i < s.length; i++) {
          var el = s[i];
          el.pauseAnimations();
        }
      }
      function setCurrentTime(evt) {
        // output.innerHTML = evt.target.value;
        // output.innerHTML = evt.target.value;
        // output.innerHTML = evt.type;
        if(!dragging) {
          setBegin("0s");
        }
        output.innerHTML = evt.target.value;
        svg.setCurrentTime(evt.target.value);
        slider_svg.setCurrentTime(evt.target.value);
        dragging = true;
      }
      function reset(evt) {
        body = document.getElementsByTagName("body")[0];
        var innerwidth = window.innerWidth;
        var innerHeight = window.innerHeight;
        // document.querySelector('meta[name="viewport"]').setAttribute('content', `width=${innerWidth}, height=${innerHeight}, initial-scale=1`);

        output = document.getElementById("output");
        output.innerHTML = `${innerWidth} x  ${innerHeight}`;
        // output.innerHTML = window.ontouchstart;
        // output.innerHTML = window.visualViewport.scale;

        if (window.visualViewport) {
          window.visualViewport.addEventListener("resize", function (event) {
            event.preventDefault();
            // output.innerHTML = window.visualViewport.scale;
          });
        }

        // document.body.style.cssText = "background-color: yellow !important";

        console.log("reset()");
        // NOTE: hardcoded svg element id... svg_document
        svg = document.getElementById("svg_document");
        // svg.pauseAnimations();

        slider_svg = document.getElementById("slider_svg");
        // slider_svg.pauseAnimations();

        // setBegin("0s");
        // animate1 = document.getElementById("animate1");
        // animate1.setAttribute("begin", "0s");
        // animate2 = document.getElementById("animate2");
        // animate2.setAttribute("begin", "0s");

        // var focus_dummy = document.getElementById("focus_dummy");
        window.onfocus = function(evt) {
          // evt.preventDefault();
          // console.log(evt);
          // svg.pauseAnimations();
          // slider_svg.pauseAnimations();
          setBegin("indefinite");
          slider.value = 0.9999;
          slider.dispatchEvent(new window.Event("input", { bubbles: true }));
          console.log("body focus()");
          // return false;
        };
        // focus_dummy.focus();

        slider = document.getElementById("slider");
        // var touch_offset_x;
        slider.ontouchstart = function (evt) {
          // repeat setting begin here because iPhone iBooks app will
          // start animations playing on Resume from menu functions
          // animate1.setAttribute("begin", "0s");
          setBegin("0s");
          setCurrentTime(evt);
          // svg.pauseAnimations();
          // slider_svg.pauseAnimations();
          // touch_offset_x = evt.touches[0].clientX - evt.target.clientX;
          // output.innerHTML = slider.getBoundingClientRect().left;
          // animate1.setAttribute("begin", "0s");
          // animate2.setAttribute("begin", "0s");
        };
        slider.ontouchmove = function (evt) {
          /* for stupid touch based Books range input, fake the range input events */
          output.innerHTML = "ontouchmove " + evt.touches[0].clientX;
          slider.value =  evt.touches[0].clientX / slider.clientWidth;
          evt.preventDefault();
          setCurrentTime(evt);
        };
        slider.ontouchend = function (evt) {
          // animate1.setAttribute("begin", "indefinite");
          // animate2.setAttribute("begin", "indefinite");
          // focus_dummy.focus();
          setBegin("indefinite");
          slider.value = 0.9999;
          slider.dispatchEvent(new window.Event("input", { bubbles: true }));
          dragging = false;
        }
        slider.oninput =
          setCurrentTime; /* for normal mouse-based range input */
        // for desktop browser and iBooks on macos
        slider.onchange = function() {
          setBegin("indefinite");
          slider.value = 0.9999;
          slider.dispatchEvent(new window.Event("input", { bubbles: true }));
          dragging = false;
        }
          // set initial value to max (setting value=1 would wrap the animation)
        slider.value = 0.9999;

        // set initial state of svg by faking a touch input event on the slider
        slider.dispatchEvent(new window.Event("input", { bubbles: true }));
      }
      ]]>
    </script>
  </head>

  <body>
    <div id="output"></div>
    <!-- <div class="content"> -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:dc="http://purl.org/dc/elements/1.1/"
      xmlns:cc="http://web.resource.org/cc/"
      xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
      xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
      xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
      version="1.1"
      viewBox="0 0 768 1024"
      width="100%"
      height="100%"
      preserveAspectRatio="xMidYMin meet"
      id="svg_document"
    >
      <title id="svg_document_title">Untitled.svg</title>
      <defs id="svg_document_defs"></defs>
      <g id="main_group">
        <rect
          x="0px"
          height="1024px"
          y="0px"
          id="background_rect"
          width="768px"
          fill="#90ee90"
        ></rect>
        <rect
          x="0px"
          height="224px"
          y="1024px"
          id="background_rect"
          width="768px"
          fill="#eeff90"
        ></rect>
      </g>
      <path
        style="
          fill: none;
          stroke: #000000;
          stroke-width: 10;
          stroke-linecap: round;
          stroke-linejoin: miter;
          stroke-miterlimit: 4;
          stroke-dasharray: none;
          stroke-opacity: 1;
        "
        d="m 303.94691,543.10784 c 0,0 -64.31821,-145.49136 -17.4372,-220.38855 30.2641,-48.34998 74.08442,-71.30517 116.35826,-74.25156 29.01256,-2.02211 83.16004,9.9378 98.00639,31.59724"
        id="path862"
      >
        <animate
          attributeName="d"
          values="
          m 303.94691,543.10784 c 0,0 -58.48066,-179.38042 -35.31258,-277.20257 12.58434,-53.13459 26.81104,-73.68194 52.14002,-111.07546 28.86355,-42.61166 62.18614,-69.196743 90.9835,-79.73194;
          m 303.94691,543.10784 c 0,0 -68.05011,-144.46859 -23.50788,-256.81263 14.32405,-36.12799 34.32312,-77.97456 75.74942,-112.14862 39.70155,-32.75125 126.57542,-42.36788 141.42177,-20.70844;
          m 303.94691,543.10784 c 0,0 -64.31821,-145.49136 -17.4372,-220.38855 30.2641,-48.34998 74.08442,-71.30517 116.35826,-74.25156 29.01256,-2.02211 83.16004,9.9378 98.00639,31.59724;
          m 303.94691,543.10784 c 0,0 -59.64741,-138.91388 -6.70565,-209.657 53.78798,-71.87386 129.45677,-43.34797 146.40658,-29.17907 18.29052,15.28964 40.23386,39.98613 35.76343,68.08449;"
          begin="indefinite"
          id="animate1"
          dur="1s"
          fill="freeze"
          repeatCount="indefinite"
        ></animate>
        <animateTransform
        attributeName="transform"
        begin="indefinite"
        type="rotate"
        from="0 304 540"
        to="10 304 540"
        dur="1s"
        fill="freeze"
        repeatCount="indefinite"
      />
      </path>
      <circle
        style="
          fill: #000000;
          fill-opacity: 1;
          stroke-width: 1;
          stroke-miterlimit: 4;
          stroke-dasharray: none;
        "
        id="path2445"
        cx="502.93515"
        cy="282.0549"
        r="10.796056"
      >
        <animate
          attributeName="cx"
          begin="indefinite"
          values="410.64386; 498.64255; 502.93515; 479.41125;"
          dur="1s"
          fill="freeze"
          repeatCount="indefinite"
        />
        <animate
          attributeName="cy"
          begin="indefinite"
          values="77.082375; 153.27635; 282.0549; 372.35626;"
          dur="1s"
          fill="freeze"
          repeatCount="indefinite"
        />
      </circle>
      <path
        stroke="#000000"
        visibility="hidden"
        stroke-width="3px"
        id="path2"
        d="M134,504 C113,440 397,352 439,477 "
        fill="none"
        transform=""
      ></path>
      <path
        style="
          fill: none;
          stroke: #000000;
          stroke-width: 8.92022;
          stroke-linecap: round;
          stroke-linejoin: miter;
          stroke-miterlimit: 4;
          stroke-dasharray: none;
          stroke-opacity: 1;
        "
        d="
      m 399.21863,569.48561 c 0,0 -54.43607,-121.11591 -6.11978,-182.79526 49.08857,-62.66522 118.14624,-37.79413 133.61516,-25.44058 16.69249,13.33069 36.71866,34.86301 32.63881,59.36134"
      >
        <animate
          attributeName="d"
          values="
          m 399.21863,569.48561 c 0,0 -53.37125,-156.39779 -32.22735,-241.68674 11.48486,-46.32686 24.46858,-64.24164 47.58459,-96.84422 26.34177,-37.15215 56.75299,-60.33109 83.03435,-69.5165;
          m 399.21863,569.48561 c 0,0 -62.10463,-125.95894 -21.45402,-223.90921 13.07257,-31.49919 31.32434,-67.98428 69.13126,-97.77988 36.23286,-28.55508 115.51663,-36.93961 129.06587,-18.05522;
          m 399.21863,569.48561 c 0,0 -58.69878,-126.85067 -15.91373,-192.15186 27.61995,-42.15527 67.61173,-62.16939 106.19214,-64.73828 26.47776,-1.76304 75.89442,8.66454 89.44366,27.54893;
          m 399.21863,569.48561 c 0,0 -54.43607,-121.11591 -6.11978,-182.79526 49.08857,-62.66522 118.14624,-37.79413 133.61516,-25.44058 16.69249,13.33069 36.71866,34.86301 32.63881,59.36134"
          keyTimes="0; 0.2; 0.8; 1"
          begin="indefinite"
          dur="1s"
          fill="freeze"
          repeatCount="indefinite"
        ></animate>
        <animateTransform
        attributeName="transform"
        begin="indefinite"
        type="rotate"
        from="0 399 566"
        to="15 399 566"
        dur="1s"
        fill="freeze"
        repeatCount="indefinite"
      />
      </path>
      <g transform="translate(20 65.5) scale(0.9 0.9)">
      <path
        style="
          fill: none;
          stroke: #000000;
          stroke-width: 8.92022;
          stroke-linecap: round;
          stroke-linejoin: miter;
          stroke-miterlimit: 4;
          stroke-dasharray: none;
          stroke-opacity: 1;
        "
        d="
        m 524.78044,578.34665 c 0,0 -48.94738,-144.34661 -29.55608,-223.06365 10.53291,-42.75716 22.44042,-59.29152 43.64037,-89.38192 24.15834,-34.2894 52.04882,-55.6823 76.15175,-64.15993"
      >
        <animate
          attributeName="d"
          values="
          m 524.78044,578.34665 c 0,0 -48.94738,-144.34661 -29.55608,-223.06365 10.53291,-42.75716 22.44042,-59.29152 43.64037,-89.38192 24.15834,-34.2894 52.04882,-55.6823 76.15175,-64.15993;
          m 524.78044,578.34665 c 0,0 -48.94738,-144.34661 -29.55608,-223.06365 10.53291,-42.75716 22.44042,-59.29152 43.64037,-89.38192 24.15834,-34.2894 52.04882,-55.6823 76.15175,-64.15993;
          m 524.78044,578.34665 c 0,0 -56.95686,-116.25322 -19.67573,-206.65596 11.989,-29.07203 28.7279,-62.74578 63.40106,-90.24549 33.22956,-26.35477 105.94162,-34.09324 118.36777,-16.66398;
          m 524.78044,578.34665 c 0,0 -53.83332,-117.07624 -14.59466,-177.34566 25.33057,-38.90701 62.00748,-57.37895 97.39001,-59.7499 24.28306,-1.62719 69.60363,7.9969 82.02979,25.42616;
          m 524.78044,578.34665 c 0,0 -49.92395,-111.78337 -5.61252,-168.71003 45.01968,-57.83658 108.35325,-34.88192 122.53998,-23.48027 15.30887,12.3035 33.6751,32.17665 29.93342,54.78727;
          m 524.78044,578.34665 c 0,0 -49.92395,-111.78337 -5.61252,-168.71003 45.01968,-57.83658 108.35325,-34.88192 122.53998,-23.48027 15.30887,12.3035 33.6751,32.17665 29.93342,54.78727"
          keyTimes="0; 0.1; 0.4; 0.75; 0.9; 1"
          begin="indefinite"
          dur="1s"
          fill="freeze"
          repeatCount="indefinite"
        ></animate>
        <animateTransform
        attributeName="transform"
        begin="indefinite"
        type="rotate"
        from="0 525 581"
        to="10 525 581"
        dur="1s"
        fill="freeze"
        repeatCount="indefinite"
      />
      </path>
    </g>
    </svg>
    <!-- </div> -->
    <div class="controls">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        version="1.1"
        viewBox="0 0 768 150"
        width="100%"
        height="100%"
        preserveAspectRatio="xMidYMin meet"
        id="slider_svg"
      >
        <rect
          x="0px"
          height="150px"
          y="0px"
          id="background_rect"
          width="768px"
          fill="#90eeff"
        ></rect>
        <rect x="0" width="200" height="150" rx="15">
          <animateTransform
            attributeName="transform"
            begin="indefinite"
            type="translate"
            from="0 0"
            to="568 0"
            dur="1s"
            fill="freeze"
            repeatCount="indefinite"
          />
        </rect>
      </svg>
      <input
        id="slider"
        name="slider"
        class="slider"
        type="range"
        min="0"
        max="0.9999"
        step="0.0001"
      />
    </div>
    <!-- <input id="focus_dummy"/> -->
  </body>
</html>
